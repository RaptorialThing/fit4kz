# This file is auto-generated by rspec-openapi https://github.com/k0kubun/rspec-openapi
#
# When you write a spec in spec/requests, running the spec with `OPENAPI=1 rspec` will
# update this file automatically. You can also manually edit this file.
---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
  description: " rsmine API"
servers:
- url: http://localhost:3000
paths:
  "/api/v1/user":
    put:
      summary: update
      tags:
      - Api::V1::User
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '422':
          description: returns the missing params error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '200':
          description: returns the user id
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
        '400':
          description: returns the error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - email
                required:
                - errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
              required:
              - user
    get:
      summary: show
      tags:
      - Api::V1::User
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/user_calendar_trainings":
    post:
      summary: create
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_calendar_training:
                  type: object
                  properties:
                    training_id:
                      type: integer
                    user_id:
                      type: integer
                  required:
                  - training_id
                  - user_id
              required:
              - user_calendar_training
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
        '422':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
    get:
      summary: index
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
  "/api/v1/trainings":
    post:
      summary: create
      tags:
      - Api::V1::Training
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                training:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                    program_id:
                      type: integer
                    video_link:
                      type: string
                  required:
                  - title
                  - description
                  - user_id
                  - program_id
                  - video_link
              required:
              - training
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
        '415':
          description: does not create a training
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
    get:
      summary: index
      tags:
      - Api::V1::Training
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
  "/api/v1/users/sign_out":
    delete:
      summary: destroy
      tags:
      - Api::V1::Session
      responses:
        '404':
          description: returns not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '200':
          description: returns a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                - success
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
  "/api/v1/status":
    get:
      summary: status
      tags:
      - Api::V1::Api
      responses:
        '200':
          description: returns the api status
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
  "/api/v1/programs":
    get:
      summary: index
      tags:
      - Api::V1::Program
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
        '401':
          description: returns a 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      security:
      - MyToken: []
    post:
      summary: create
      tags:
      - Api::V1::Program
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - title
                  - description
                  - user_id
              required:
              - program
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
        '415':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
        '406':
          description: returns a 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v1/users/sign_in":
    post:
      summary: create
      tags:
      - Api::V1::Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
      responses:
        '401':
          description: return errors upon failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '200':
          description: does not raise an error
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
  "/api/v1/trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Training
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
  "/api/v1/settings/must_update":
    get:
      summary: must_update
      tags:
      - Api::V1::Setting
      parameters:
      - name: device_version
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: returns it needs to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  must_update:
                    type: boolean
                required:
                - must_update
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
              required:
              - user
      responses:
        '201':
          description: does not raise an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  allow_password_change:
                    type: boolean
                  first_name:
                    type: string
                  last_name:
                    type: string
                  username:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  provider:
                    type: string
                  uid:
                    type: string
                required:
                - id
                - email
                - allow_password_change
                - first_name
                - last_name
                - username
                - created_at
                - updated_at
                - provider
                - uid
        '401':
          description: does not create a user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  "/api/v1/user_calendar_trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
  "/api/v1/programs/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Program
      parameters:
      - name: Authorization
        in: header
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '404':
          description: list all programs ordered by default
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '401':
          description: returns a 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
      security:
      - MyToken: []
    put:
      summary: update
      tags:
      - Api::V1::Program
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '406':
          description: returns a 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
    patch:
      summary: update
      tags:
      - Api::V1::Program
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '406':
          description: returns a 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
components:
  securitySchemes:
    MyToken:
      description: Authenticate API requests via a JWT
      type: http
      scheme: bearer
      bearerFormat: JWT
