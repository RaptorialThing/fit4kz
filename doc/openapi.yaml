---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
servers: []
paths:
  "/api/v1/trainings":
    post:
      summary: create
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 91id_qqb05pwkqe0pjIxOg
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: KKnG3AFYWym74crE-KXGqg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: shaun@jenkins.example
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                training:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                    program_id:
                      type: integer
                    video_link:
                      type: string
                  required:
                  - title
                  - description
                  - user_id
                  - program_id
                  - video_link
              required:
              - training
            example:
              training:
                title: test
                description: description
                user_id: 113
                program_id: 100500
                video_link: https://www.youtube.com/
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"35","type":"training","attributes":{"title":"test","description":"description","video_link":"https://www.youtube.com/"},"relationships":{"program":{"data":{"type":"program","id":"47"}},"user":{"data":{"type":"user","id":"110"}}}},"included":[{"id":"47","type":"program","attributes":{"title":"Cat
                Anderson"}},{"id":"110","type":"user","attributes":{"username":"minh.mclaughlin","uid":"duncan_schimmel@harber.example"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid program","detail":"Program must
                exist","source":{}}],"jsonapi":{"version":"1.0"}}'
    get:
      summary: index
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 9fz7CPywFfu9sF1rTgGllw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: 03_MmmAFdRprcitRbY1t5g
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: maritza@oreilly.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
  "/api/v1/settings/must_update":
    get:
      summary: must_update
      tags:
      - Api::V1::Setting
      parameters:
      - name: device_version
        in: query
        required: false
        schema:
          type: string
        example: '1.0'
      responses:
        '200':
          description: returns no need to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  must_update:
                    type: boolean
                required:
                - must_update
              example:
                must_update: false
  "/api/v1/programs":
    get:
      summary: index
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: ga63eXb05XUkizojqf4VAA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: JCzSfTlV-rSvAUKG2tHQCg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: willie@abernathy-ratke.test
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
    post:
      summary: create
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: BGRJebEmKOsOVfxsMLkx7g
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: krjuMhdT3rdMSoLKE0Ukrg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: cordie@rowe.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - title
                  - description
                  - user_id
              required:
              - program
            example:
              program:
                title: test
                description: description
                user_id: 100500
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"61","type":"program","attributes":{"title":"test","description":"description"},"relationships":{"trainings":{"data":[]},"program_followers":{"meta":{"included":false}},"users":{"meta":{"included":false}},"user":{"data":{"type":"user","id":"162"}}}},"included":[{"id":"162","type":"user","attributes":{"username":"clarissa.zemlak","uid":"tabetha@bednar.test"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid user","detail":"User must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/users/sign_out":
    delete:
      summary: destroy
      tags:
      - Api::V1::Session
      responses:
        '404':
          description: returns not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User was not found or was not logged in.
        '200':
          description: returns a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                - success
              example:
                success: true
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: I-ZY6rFoNo8dDnA88fJxfQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: UfgqGqZFNEA7paRFK1m6Ww
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: sherley@schultz.example
  "/api/v1/users/sign_in":
    post:
      summary: create
      tags:
      - Api::V1::Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
            example:
              user:
                email: andreas@jakubowski.example
                password: password
      responses:
        '401':
          description: returns to be unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid login credentials. Please try again.
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 132
                  email: andreas@jakubowski.example
                  name: zelda
                  username: zelda
                  first_name: ''
                  last_name: ''
                  uid: andreas@jakubowski.example
                  provider: email
                  created_at: '2023-12-02T10:34:56.775Z'
                  updated_at: '2023-12-02T10:34:56.937Z'
  "/api/v1/user":
    put:
      summary: update
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: G4p4D16WZ2oRoamVWiFDCA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: 9-vUEzvrlndrzhEA1ikc2Q
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: cherilyn@hane-toy.test
      responses:
        '422':
          description: returns the missing params error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: A required param is missing
        '400':
          description: returns the error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - email
                required:
                - errors
              example:
                errors:
                  email:
                  - is not an email
        '200':
          description: returns the user full name
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 140
                  email: cherilyn@hane-toy.test
                  name: new username
                  username: new username
                  first_name: ''
                  last_name: ''
                  uid: cherilyn@hane-toy.test
                  provider: email
                  created_at: '2023-12-02T10:34:59.196Z'
                  updated_at: '2023-12-02T10:34:59.547Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    username:
                      type: string
              required:
              - user
            example:
              user:
                email: notanemail
                username: new username
    get:
      summary: show
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: fHnq2LlwmMxetI7jPFjykg
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: w99nuQYCUEuFzq8-3qRdhA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: clement@bergnaum.test
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 157
                  email: dennis.lind@jacobi.test
                  name: albertha
                  username: albertha
                  first_name: ''
                  last_name: ''
                  uid: dennis.lind@jacobi.test
                  provider: email
                  created_at: '2023-12-02T10:35:04.576Z'
                  updated_at: '2023-12-02T10:35:04.707Z'
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: j0GBjAHMhmDUtAzF45qjuQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: VByjXViEtYgpuzfIQsW1QA
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: nelda@mueller.example
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/user_calendar_trainings":
    get:
      summary: index
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: HRCHy2kl8-QObSeAVLa5Sw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: szRgCONpGRpC5NJKMYceuA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: quincy@medhurst-welch.test
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
    post:
      summary: create
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: HcyjK3PLFKwY4Bl11QnzHg
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: GTDUtrfo3XsEtZQno_iOCg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: domingo@farrell-sipes.example
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_calendar_training:
                  type: object
                  properties:
                    training_id:
                      type: integer
                    user_id:
                      type: integer
                    training_datetime:
                      type: string
                  required:
                  - training_id
                  - user_id
                  - training_datetime
              required:
              - user_calendar_training
            example:
              user_calendar_training:
                training_id: 42
                user_id: 178
                training_datetime: '2023-12-02T13:35:10.167+03:00'
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"22","type":"user_calendar_training","attributes":{"icube_rule":null,"last_date":null},"relationships":{"training":{"data":{"type":"training","id":"42"}},"user":{"data":{"type":"user","id":"178"}}}},"included":[{"id":"42","type":"training","attributes":{"title":"Modern
                Times"}},{"id":"178","type":"user","attributes":{"username":"milly","uid":"domingo@farrell-sipes.example"}}],"jsonapi":{"version":"1.0"}}'
        '422':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid training","detail":"Training
                must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/status":
    get:
      summary: status
      tags:
      - Api::V1::Api
      responses:
        '200':
          description: returns the api status
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
              example:
                online: true
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
              required:
              - user
            example:
              user:
                username: test
                email: test@example.com
                password: '12345678'
                password_confirmation: '12345678'
                first_name: Johnny
                last_name: Perez
      responses:
        '201':
          description: does not return a Set-Cookie Header
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  allow_password_change:
                    type: boolean
                  first_name:
                    type: string
                  last_name:
                    type: string
                  username:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  provider:
                    type: string
                  uid:
                    type: string
                required:
                - id
                - email
                - allow_password_change
                - first_name
                - last_name
                - username
                - created_at
                - updated_at
                - provider
                - uid
              example:
                id: 183
                email: test@example.com
                allow_password_change: false
                first_name: Johnny
                last_name: Perez
                username: test
                created_at: '2023-12-02T10:35:11.477Z'
                updated_at: '2023-12-02T10:35:11.477Z'
                provider: email
                uid: test@example.com
        '401':
          description: does not return a successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Password is too short (minimum is 8 characters)
  "/api/v1/programs/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 9zuq6DqjSvVzTfFjQCH6OQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: lC1aFKTOrw_YO2L6U7ETQg
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: garland_conroy@feil.test
      responses:
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/user_calendar_trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: H0uOzych3RwqWHr8KlfZ0w
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: I6y_VkfnPeV8Xf_Nn3fqkQ
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: efren@tillman.example
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
