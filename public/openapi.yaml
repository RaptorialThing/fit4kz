---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
servers: []
paths:
  "/api/v1/user_calendar_trainings":
    get:
      summary: index
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: Dw7NnrpZ01X7s2hFmzALdA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: xVKibgVFVI1xV82t3WGpOA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: danna@kihn.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
    post:
      summary: create
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: LnFzRVzR0rn3hSrZXUYmvw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: L1PPUmfIqRye88oYTaod7A
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: hue.lowe@larson-dicki.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_calendar_training:
                  type: object
                  properties:
                    training_id:
                      type: integer
                    user_id:
                      type: integer
                  required:
                  - training_id
                  - user_id
              required:
              - user_calendar_training
            example:
              user_calendar_training:
                training_id: 100500
                user_id: 345
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"24","type":"user_calendar_training","attributes":{"icube_rule":null,"last_date":null},"relationships":{"training":{"data":{"type":"training","id":"49"}},"user":{"data":{"type":"user","id":"343"}}}},"included":[{"id":"49","type":"training","attributes":{"title":"Star
                Wars: Episode VI - Return of the Jedi"}},{"id":"343","type":"user","attributes":{"username":"sunni_hoeger","uid":"stacy@greenfelder.example"}}],"jsonapi":{"version":"1.0"}}'
        '422':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid training","detail":"Training
                must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/user_calendar_trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: vuCLVIQPnpbj6aEB-SiCjQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: BK1MD82P7RLoUNqsxQHQRg
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: carl@will-renner.example
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/programs":
    post:
      summary: create
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: ChmMbcgGwJlzAD1-EPGfyQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: mIFpYRD0vpDLZcSaEcdYMg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: nick@kirlin.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - title
                  - description
                  - user_id
              required:
              - program
            example:
              program:
                title: test
                description: description
                user_id: 283
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"77","type":"program","attributes":{"title":"test","description":"description"},"relationships":{"trainings":{"data":[]},"program_followers":{"meta":{"included":false}},"users":{"meta":{"included":false}},"user":{"data":{"type":"user","id":"283"}}}},"included":[{"id":"283","type":"user","attributes":{"username":"shelley","uid":"nick@kirlin.test"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not create a program
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid user","detail":"User must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
    get:
      summary: index
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: ceF0Qj-QRTw2yRLfoqJ64w
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: buaZE_XLc8O-zn-fnbZMYg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: suzette.bode@witting.example
      responses:
        '200':
          description: returns the program data
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[{"id":"92","type":"program","attributes":{"title":"title
                test","description":"description test"},"relationships":{"trainings":{"data":[{"type":"training","id":"50"}]},"program_followers":{"meta":{"included":false}},"users":{"meta":{"included":false}},"user":{"data":{"type":"user","id":"348"}}}}],"included":[{"id":"50","type":"training","attributes":{"title":"test","description":"description","video_link":"https://www.youtube.com/"},"relationships":{"program":{"meta":{"included":false}},"user":{"meta":{"included":false}}}},{"id":"348","type":"user","attributes":{"username":"peg","uid":"suzette.bode@witting.example"}}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
              required:
              - user
            example:
              user:
                username: test
                email: test@example.com
                password: '12345678'
                password_confirmation: '12345678'
                first_name: Johnny
                last_name: Perez
      responses:
        '201':
          description: does not raise an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  allow_password_change:
                    type: boolean
                  first_name:
                    type: string
                  last_name:
                    type: string
                  username:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  provider:
                    type: string
                  uid:
                    type: string
                required:
                - id
                - email
                - allow_password_change
                - first_name
                - last_name
                - username
                - created_at
                - updated_at
                - provider
                - uid
              example:
                id: 288
                email: test@example.com
                allow_password_change: false
                first_name: Johnny
                last_name: Perez
                username: test
                created_at: '2023-11-20T14:34:01.201Z'
                updated_at: '2023-11-20T14:34:01.201Z'
                provider: email
                uid: test@example.com
        '401':
          description: does not create a user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Email is not an email
  "/api/v1/users/sign_in":
    post:
      summary: create
      tags:
      - Api::V1::Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
            example:
              user:
                email: emery_reinger@hauck-schinner.example
                password: password
      responses:
        '401':
          description: return errors upon failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid login credentials. Please try again.
        '200':
          description: does not raise an error
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 295
                  email: emery_reinger@hauck-schinner.example
                  name: marion
                  username: marion
                  first_name: ''
                  last_name: ''
                  uid: emery_reinger@hauck-schinner.example
                  provider: email
                  created_at: '2023-11-20T14:34:02.216Z'
                  updated_at: '2023-11-20T14:34:02.362Z'
  "/api/v1/status":
    get:
      summary: status
      tags:
      - Api::V1::Api
      responses:
        '200':
          description: returns status 200 ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
              example:
                online: true
  "/api/v1/users/sign_out":
    delete:
      summary: destroy
      tags:
      - Api::V1::Session
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: ekBnOl_aQdcMODsvWrM5DA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: D7-9BjBx5Vhg14JRS8nT7g
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: margorie_skiles@terry.test
      responses:
        '200':
          description: decrements the amount of user tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                - success
              example:
                success: true
        '404':
          description: returns not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User was not found or was not logged in.
  "/api/v1/user":
    get:
      summary: show
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: S_MqajXCmvWTL1XPTno6ig
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: sLWyOtOPQd5KIf2CMfUsOg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: maris_jones@yost-blanda.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 310
                  email: mathew@boehm.example
                  name: haydee.schulist
                  username: haydee.schulist
                  first_name: ''
                  last_name: ''
                  uid: mathew@boehm.example
                  provider: email
                  created_at: '2023-11-20T14:34:05.550Z'
                  updated_at: '2023-11-20T14:34:05.668Z'
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
    put:
      summary: update
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: VYaXSP-2khx9j9bESwPM6A
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: efMxwRmQm7mYTqCX4sg8Ug
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: maria@gusikowski-bailey.example
      responses:
        '422':
          description: returns the missing params error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: A required param is missing
        '400':
          description: returns the error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - email
                required:
                - errors
              example:
                errors:
                  email:
                  - is not an email
        '200':
          description: returns success
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 364
                  email: maria@gusikowski-bailey.example
                  name: new username
                  username: new username
                  first_name: ''
                  last_name: ''
                  uid: maria@gusikowski-bailey.example
                  provider: email
                  created_at: '2023-11-20T14:34:16.204Z'
                  updated_at: '2023-11-20T14:34:16.456Z'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    username:
                      type: string
              required:
              - user
            example:
              user:
                email: notanemail
                username: new username
  "/api/v1/trainings":
    post:
      summary: create
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: w1H3ENouOI9lADOKcFGQGQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: yPDtSiMt6MxtSFxKlY8qog
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: eddie@waters.example
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                training:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                    program_id:
                      type: integer
                    video_link:
                      type: string
                  required:
                  - title
                  - description
                  - user_id
                  - program_id
                  - video_link
              required:
              - training
            example:
              training:
                title: test
                description: description
                user_id: 328
                program_id: 100500
                video_link: https://www.youtube.com/
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"44","type":"training","attributes":{"title":"test","description":"description","video_link":"https://www.youtube.com/"},"relationships":{"program":{"data":{"type":"program","id":"84"}},"user":{"data":{"type":"user","id":"325"}}}},"included":[{"id":"84","type":"program","attributes":{"title":"Noel
                Gallagher"}},{"id":"325","type":"user","attributes":{"username":"lloyd.kuphal","uid":"norberto_tillman@champlin.example"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not create a training
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid program","detail":"Program must
                exist","source":{}}],"jsonapi":{"version":"1.0"}}'
    get:
      summary: index
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: aUWev0DlL7Nw06mvS3yxDw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: ARgC9irxP4oEf6FE5pliyA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: edie.lynch@stoltenberg.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
  "/api/v1/settings/must_update":
    get:
      summary: must_update
      tags:
      - Api::V1::Setting
      parameters:
      - name: device_version
        in: query
        required: false
        schema:
          type: string
        example: '1.0'
      responses:
        '200':
          description: return success
          content:
            application/json:
              schema:
                type: object
                properties:
                  must_update:
                    type: boolean
                required:
                - must_update
              example:
                must_update: false
  "/api/v1/programs/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: MgRUynqX5ndB704F9AL0uA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: QwfVlklfPjqhB-JDxdZDzw
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: chet@ziemann.example
      responses:
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: aItpUNHpflgyFY1ZZmSATA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: KAqiACSlOWErJEVI_YXxPg
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: jena@kohler.test
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
