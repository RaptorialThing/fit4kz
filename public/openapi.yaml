---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
servers: []
paths:
  "/api/v1/user":
    put:
      summary: update
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: o42X3b5rddV2A2y_4ERgMg
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: QmOb2YaBsqQ3_k2J83W_uA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: hector@bechtelar.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
              required:
              - user
            example:
              user:
                username: new username
                email: notanemail
      responses:
        '200':
          description: returns the user full name
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 867
                  email: ali_gusikowski@ullrich.example
                  name: new username
                  username: new username
                  first_name: ''
                  last_name: ''
                  uid: ali_gusikowski@ullrich.example
                  provider: email
                  created_at: '2023-11-20T16:21:32.318Z'
                  updated_at: '2023-11-20T16:21:32.585Z'
        '400':
          description: returns the error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - email
                required:
                - errors
              example:
                errors:
                  email:
                  - is not an email
        '422':
          description: returns the missing params error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: A required param is missing
    get:
      summary: show
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 2FxoStbTTIkgDONETJyflw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: FMfXvKRJ2v0c_qErW5Lj5w
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: roxanna_abbott@rowe-aufderhar.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 932
                  email: abraham_dickinson@leuschke.test
                  name: randy
                  username: randy
                  first_name: ''
                  last_name: ''
                  uid: abraham_dickinson@leuschke.test
                  provider: email
                  created_at: '2023-11-20T16:21:44.818Z'
                  updated_at: '2023-11-20T16:21:44.935Z'
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/users/sign_in":
    post:
      summary: create
      tags:
      - Api::V1::Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
            example:
              user:
                email: eliseo.monahan@hessel-hamill.test
                password: wrong_password!
      responses:
        '200':
          description: does not raise an error
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 876
                  email: palmer.greenholt@gislason.example
                  name: angelia.ferry
                  username: angelia.ferry
                  first_name: ''
                  last_name: ''
                  uid: palmer.greenholt@gislason.example
                  provider: email
                  created_at: '2023-11-20T16:21:34.661Z'
                  updated_at: '2023-11-20T16:21:34.817Z'
        '401':
          description: returns to be unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid login credentials. Please try again.
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
              required:
              - user
            example:
              user:
                username: test
                email: test@example.com
                password: '12345678'
                password_confirmation: '12345678'
                first_name: Johnny
                last_name: Perez
      responses:
        '201':
          description: does not raise an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  allow_password_change:
                    type: boolean
                  first_name:
                    type: string
                  last_name:
                    type: string
                  username:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  provider:
                    type: string
                  uid:
                    type: string
                required:
                - id
                - email
                - allow_password_change
                - first_name
                - last_name
                - username
                - created_at
                - updated_at
                - provider
                - uid
              example:
                id: 885
                email: test@example.com
                allow_password_change: false
                first_name: Johnny
                last_name: Perez
                username: test
                created_at: '2023-11-20T16:21:36.043Z'
                updated_at: '2023-11-20T16:21:36.043Z'
                provider: email
                uid: test@example.com
        '401':
          description: does not return a successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
              example:
              - Password confirmation doesn't match Password
  "/api/v1/settings/must_update":
    get:
      summary: must_update
      tags:
      - Api::V1::Setting
      parameters:
      - name: device_version
        in: query
        required: false
        schema:
          type: string
        example: '1.0'
      responses:
        '200':
          description: returns it needs to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  must_update:
                    type: boolean
                required:
                - must_update
              example:
                must_update: true
  "/api/v1/user_calendar_trainings":
    post:
      summary: create
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: Sj_-xEizQbxeMwDSNLVFUQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: wRy2jlFOKrock0C51CalkA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: glenna@prosacco.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_calendar_training:
                  type: object
                  properties:
                    training_id:
                      type: integer
                    user_id:
                      type: integer
                  required:
                  - training_id
                  - user_id
              required:
              - user_calendar_training
            example:
              user_calendar_training:
                training_id: 123
                user_id: 899
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"58","type":"user_calendar_training","attributes":{"icube_rule":null,"last_date":null},"relationships":{"training":{"data":{"type":"training","id":"123"}},"user":{"data":{"type":"user","id":"899"}}}},"included":[{"id":"123","type":"training","attributes":{"title":"Toy
                Story 3"}},{"id":"899","type":"user","attributes":{"username":"mitch","uid":"glenna@prosacco.test"}}],"jsonapi":{"version":"1.0"}}'
        '422':
          description: does not create a training
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid training","detail":"Training
                must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
    get:
      summary: index
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: DPuqrrZMRkq87SUwkiOqxA
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: CqMAsJdQkMjoeLt7wA8e4Q
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: anneliese.stoltenberg@paucek-mosciski.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
  "/api/v1/user_calendar_trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::UserCalendarTraining
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: HI9jt5ogPHU72EX6Z0VYHw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: fMUX5hCGptLSBuoKJpb-Tw
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: ivette@labadie-reichert.test
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/trainings":
    post:
      summary: create
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: wvjmmBdpjjpTcB8Xwhsehg
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: xu9qJ5eYQaZ5mjFQeAFKLA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: luciano@goldner.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                training:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                    program_id:
                      type: integer
                    video_link:
                      type: string
                  required:
                  - title
                  - description
                  - user_id
                  - program_id
                  - video_link
              required:
              - training
            example:
              training:
                title: test
                description: description
                user_id: 913
                program_id: 100500
                video_link: https://www.youtube.com/
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"128","type":"training","attributes":{"title":"test","description":"description","video_link":"https://www.youtube.com/"},"relationships":{"program":{"data":{"type":"program","id":"241"}},"user":{"data":{"type":"user","id":"910"}}}},"included":[{"id":"241","type":"program","attributes":{"title":"The
                Kinks"}},{"id":"910","type":"user","attributes":{"username":"mitch_bode","uid":"brian_auer@connelly.example"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid program","detail":"Program must
                exist","source":{}}],"jsonapi":{"version":"1.0"}}'
    get:
      summary: index
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 6S_muKDCKbRxbpTMLGFN-w
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: Nqm-RcETT-tlfuxnb61e_w
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: ken@zieme-gutmann.example
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[],"jsonapi":{"version":"1.0"}}'
  "/api/v1/programs":
    get:
      summary: index
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: NnXRA3gaNr3mCnJJjsoCPw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: OrvdYUCc50T43HES3gCxQQ
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: cletus@kreiger.test
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":[{"id":"249","type":"program","attributes":{"title":"test
                title","description":"test description"},"relationships":{"trainings":{"data":[]},"program_followers":{"meta":{"included":false}},"users":{"meta":{"included":false}},"user":{"data":{"type":"user","id":"943"}}}}],"included":[{"id":"943","type":"user","attributes":{"username":"carleen.stehr","uid":"cletus@kreiger.test"}}],"jsonapi":{"version":"1.0"}}'
    post:
      summary: create
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 6VGtA-QbUY80xxxXffzLFw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: 9W4gBo--ny42ZxkACuOmiA
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: mac@veum.example
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                program:
                  type: object
                  properties:
                    title:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - title
                  - description
                  - user_id
              required:
              - program
            example:
              program:
                title: test
                description: description
                user_id: 949
      responses:
        '201':
          description: return a Authorization Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"data":{"id":"253","type":"program","attributes":{"title":"test","description":"description"},"relationships":{"trainings":{"data":[]},"program_followers":{"meta":{"included":false}},"users":{"meta":{"included":false}},"user":{"data":{"type":"user","id":"949"}}}},"included":[{"id":"949","type":"user","attributes":{"username":"kieth_bruen","uid":"mac@veum.example"}}],"jsonapi":{"version":"1.0"}}'
        '415':
          description: does not return a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"title":"Invalid user","detail":"User must exist","source":{}}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/programs/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Program
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: TifKL9XzBp0UINfyJjvXMw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: rxD1KZ2EryIKLDIONB9Kkg
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: lester@beer.test
      responses:
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/trainings/{id}":
    get:
      summary: show
      tags:
      - Api::V1::Training
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: qDC_lLFldTqCu4uqjDT5Xw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: Ui_w0SE96qvxX6kCaTrgEA
      - name: id
        in: path
        required: true
        schema:
          type: integer
        example: 100500
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: doreatha@koepp-hoppe.example
      responses:
        '404':
          description: returns status 404 not found
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/vnd.api+json:
              schema:
                type: string
              example: '{"errors":[{"detail":"record not found"}],"jsonapi":{"version":"1.0"}}'
  "/api/v1/users/sign_out":
    delete:
      summary: destroy
      tags:
      - Api::V1::Session
      responses:
        '404':
          description: returns not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User was not found or was not logged in.
        '200':
          description: returns a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                - success
              example:
                success: true
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 2EMHg0U-iT6g3TIM5y51Ug
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: fgLPT4C_Nmh2C-OET02QWw
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: mandie_streich@monahan.test
  "/api/v1/status":
    get:
      summary: status
      tags:
      - Api::V1::Api
      responses:
        '200':
          description: returns the api status
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
              example:
                online: true
